{"/home/gabriel/repositorios/fullstack-app-test/app/backend/src/database/models/user.model.ts":{"path":"/home/gabriel/repositorios/fullstack-app-test/app/backend/src/database/models/user.model.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":20},"end":{"line":6,"column":40}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":51}},"5":{"start":{"line":10,"column":0},"end":{"line":47,"column":3}},"6":{"start":{"line":48,"column":0},"end":{"line":48,"column":23}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/gabriel/repositorios/fullstack-app-test/app/backend/src/database/models/user.model.ts","sources":["/home/gabriel/repositorios/fullstack-app-test/app/backend/src/database/models/user.model.ts"],"names":[],"mappings":";;;;;AAAA,yCAA6C;AAC7C,oDAAyB;AAEzB,MAAM,IAAK,SAAQ,iBAAK;CAQvB;AAED,IAAI,CAAC,IAAI,CAAC;IACT,EAAE,EAAE;QACH,IAAI,EAAE,qBAAS,CAAC,OAAO;QACvB,UAAU,EAAE,IAAI;QAChB,aAAa,EAAE,IAAI;QACnB,SAAS,EAAE,KAAK;KAChB;IACD,IAAI,EAAE;QACL,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,SAAS,EAAE,KAAK;KAChB;IACD,KAAK,EAAE;QACN,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,SAAS,EAAE,KAAK;KAChB;IACD,KAAK,EAAE;QACN,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,SAAS,EAAE,KAAK;KAChB;IACD,MAAM,EAAE;QACP,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,SAAS,EAAE,KAAK;KAChB;IACD,gBAAgB,EAAE;QACjB,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,SAAS,EAAE,KAAK;KAChB;IACD,KAAK,EAAE;QACN,IAAI,EAAE,qBAAS,CAAC,OAAO;QACvB,SAAS,EAAE,KAAK;QAChB,YAAY,EAAE,IAAI;KAClB;CACD,EAAE;IACF,WAAW,EAAE,IAAI;IACjB,SAAS,EAAE,eAAE;IACb,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE,OAAO;CAClB,CAAC,CAAC;AAEH,kBAAe,IAAI,CAAC","sourcesContent":["import { DataTypes, Model } from 'sequelize';\nimport db from './index';\n\nclass User extends Model {\n\tpublic id!: number;\n\tpublic nome!: string;\n\tpublic email!: string;\n\tpublic senha!: string;\n\tpublic avatar!: string;\n\tpublic dataDeNascimento!: Date;\n\tpublic ativo!: boolean;\n}\n\nUser.init({\n\tid: {\n\t\ttype: DataTypes.INTEGER,\n\t\tprimaryKey: true,\n\t\tautoIncrement: true,\n\t\tallowNull: false,\n\t},\n\tnome: {\n\t\ttype: DataTypes.STRING,\n\t\tallowNull: false,\n\t},\n\temail: {\n\t\ttype: DataTypes.STRING,\n\t\tallowNull: false,\n\t},\n\tsenha: {\n\t\ttype: DataTypes.STRING,\n\t\tallowNull: false,\n\t},\n\tavatar: {\n\t\ttype: DataTypes.STRING,\n\t\tallowNull: false,\n\t},\n\tdataDeNascimento: {\n\t\ttype: DataTypes.DATE,\n\t\tallowNull: false,\n\t},\n\tativo: {\n\t\ttype: DataTypes.BOOLEAN,\n\t\tallowNull: false,\n\t\tdefaultValue: true\n\t},\n}, {\n\tunderscored: true,\n\tsequelize: db,\n\ttimestamps: false,\n\ttableName: 'Users',\n});\n\nexport default User;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e921a22f63f12574b497795ef7fa8afe3208a1ba"},"/home/gabriel/repositorios/fullstack-app-test/app/backend/src/database/models/index.ts":{"path":"/home/gabriel/repositorios/fullstack-app-test/app/backend/src/database/models/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"25":{"start":{"line":26,"column":20},"end":{"line":26,"column":40}},"26":{"start":{"line":27,"column":15},"end":{"line":27,"column":58}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21}},"s":{"0":1,"1":6,"2":6,"3":6,"4":6,"5":6,"6":16,"7":6,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":6,"21":6,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1},"f":{"0":6,"1":16,"2":0,"3":1,"4":0,"5":1},"b":{"0":[1,1,1],"1":[1,0],"2":[6,0],"3":[6,0],"4":[6,6],"5":[0,6],"6":[6,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[6,0],"15":[6,6]},"inputSourceMap":{"version":3,"file":"/home/gabriel/repositorios/fullstack-app-test/app/backend/src/database/models/index.ts","sources":["/home/gabriel/repositorios/fullstack-app-test/app/backend/src/database/models/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yCAAsC;AACtC,2DAA6C;AAE7C,kBAAe,IAAI,qBAAS,CAAC,MAAM,CAAC,CAAC","sourcesContent":["import { Sequelize } from 'sequelize';\nimport * as config from '../config/database';\n\nexport default new Sequelize(config);"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8672295125e9883053addc36b6e9ef3c39391956"},"/home/gabriel/repositorios/fullstack-app-test/app/backend/src/services/user/users.service.ts":{"path":"/home/gabriel/repositorios/fullstack-app-test/app/backend/src/services/user/users.service.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":62}},"3":{"start":{"line":7,"column":21},"end":{"line":7,"column":81}},"4":{"start":{"line":8,"column":30},"end":{"line":8,"column":99}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":10}},"7":{"start":{"line":13,"column":0},"end":{"line":23,"column":2}},"8":{"start":{"line":14,"column":4},"end":{"line":22,"column":5}},"9":{"start":{"line":15,"column":21},"end":{"line":17,"column":10}},"10":{"start":{"line":18,"column":8},"end":{"line":18,"column":20}},"11":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"12":{"start":{"line":24,"column":0},"end":{"line":32,"column":2}},"13":{"start":{"line":25,"column":4},"end":{"line":31,"column":5}},"14":{"start":{"line":26,"column":21},"end":{"line":26,"column":67}},"15":{"start":{"line":27,"column":8},"end":{"line":27,"column":20}},"16":{"start":{"line":30,"column":8},"end":{"line":30,"column":19}},"17":{"start":{"line":33,"column":0},"end":{"line":41,"column":2}},"18":{"start":{"line":34,"column":4},"end":{"line":40,"column":5}},"19":{"start":{"line":35,"column":21},"end":{"line":35,"column":77}},"20":{"start":{"line":36,"column":8},"end":{"line":36,"column":20}},"21":{"start":{"line":39,"column":8},"end":{"line":39,"column":19}},"22":{"start":{"line":42,"column":0},"end":{"line":56,"column":2}},"23":{"start":{"line":43,"column":4},"end":{"line":55,"column":5}},"24":{"start":{"line":44,"column":23},"end":{"line":50,"column":10}},"25":{"start":{"line":51,"column":8},"end":{"line":51,"column":22}},"26":{"start":{"line":54,"column":8},"end":{"line":54,"column":19}},"27":{"start":{"line":57,"column":0},"end":{"line":74,"column":2}},"28":{"start":{"line":58,"column":4},"end":{"line":73,"column":5}},"29":{"start":{"line":59,"column":23},"end":{"line":68,"column":16}},"30":{"start":{"line":69,"column":8},"end":{"line":69,"column":22}},"31":{"start":{"line":72,"column":8},"end":{"line":72,"column":19}},"32":{"start":{"line":75,"column":0},"end":{"line":87,"column":2}},"33":{"start":{"line":76,"column":4},"end":{"line":86,"column":5}},"34":{"start":{"line":77,"column":27},"end":{"line":81,"column":16}},"35":{"start":{"line":82,"column":8},"end":{"line":82,"column":26}},"36":{"start":{"line":85,"column":8},"end":{"line":85,"column":19}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":15},"end":{"line":13,"column":16}},"loc":{"start":{"line":13,"column":27},"end":{"line":23,"column":1}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":18},"end":{"line":24,"column":19}},"loc":{"start":{"line":24,"column":34},"end":{"line":32,"column":1}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":33,"column":19},"end":{"line":33,"column":20}},"loc":{"start":{"line":33,"column":36},"end":{"line":41,"column":1}},"line":33},"4":{"name":"(anonymous_4)","decl":{"start":{"line":42,"column":14},"end":{"line":42,"column":15}},"loc":{"start":{"line":42,"column":30},"end":{"line":56,"column":1}},"line":42},"5":{"name":"(anonymous_5)","decl":{"start":{"line":57,"column":14},"end":{"line":57,"column":15}},"loc":{"start":{"line":57,"column":36},"end":{"line":74,"column":1}},"line":57},"6":{"name":"(anonymous_6)","decl":{"start":{"line":75,"column":18},"end":{"line":75,"column":19}},"loc":{"start":{"line":75,"column":32},"end":{"line":87,"column":1}},"line":75}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":1,"18":1,"19":1,"20":1,"21":0,"22":1,"23":1,"24":1,"25":1,"26":0,"27":1,"28":1,"29":1,"30":1,"31":0,"32":1,"33":1,"34":1,"35":1,"36":0},"f":{"0":2,"1":1,"2":0,"3":1,"4":1,"5":1,"6":1},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2]},"inputSourceMap":{"version":3,"file":"/home/gabriel/repositorios/fullstack-app-test/app/backend/src/services/user/users.service.ts","sources":["/home/gabriel/repositorios/fullstack-app-test/app/backend/src/services/user/users.service.ts"],"names":[],"mappings":";;;;;;AACA,kFAAyD;AACzD,oGAAsE;AAEtE,MAAqB,IAAI;;AAAzB,uBA8EC;;AA5Ec,YAAO,GAAE,KAAK,IAAgC,EAAE;IAC7D,IAAI;QACH,MAAM,IAAI,GAAG,MAAM,oBAAS,CAAC,OAAO,CAAC;YACpC,UAAU,EAAE,EAAE,OAAO,EAAE,CAAC,OAAO,CAAC,EAAE;SAClC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;KACZ;IAAC,OAAO,GAAQ,EAAE;QAClB,OAAO,GAAG,CAAC;KACX;AACF,CAAC,CAAC;AAEY,eAAU,GAAG,KAAK,EAAE,IAAY,EAAgC,EAAE;IAC/E,IAAI;QACH,MAAM,IAAI,GAAG,MAAM,IAAA,6BAAa,EAAC,IAAI,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC;KACZ;IAAC,OAAO,GAAQ,EAAE;QAClB,OAAO,GAAG,CAAC;KACX;AACF,CAAC,CAAC;AAEY,gBAAW,GAAG,KAAK,EAAE,KAAa,EAA4B,EAAE;IAC7E,IAAI;QACH,MAAM,IAAI,GAAG,MAAM,oBAAS,CAAC,OAAO,CAAC,EAAC,KAAK,EAAE,EAAE,KAAK,EAAE,EAAC,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC;KACZ;IAAC,OAAO,GAAQ,EAAE;QAClB,OAAO,GAAG,CAAC;KACX;AACF,CAAC,CAAC;AAEY,WAAM,GAAG,KAAK,EAAE,IAAc,EAA4B,EAAE;IACzE,IAAI;QACH,MAAM,MAAM,GAAoB,MAAM,oBAAS,CAAC,MAAM,CAAC;YACtD,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;SACvC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;KACd;IAAC,OAAO,GAAQ,EAAE;QAClB,OAAO,GAAG,CAAC;KACX;AACF,CAAC,CAAC;AAEY,WAAM,GAAG,KAAK,EAAE,IAAY,EAAE,IAAoB,EAAkC,EAAE;IACnG,IAAI;QACH,MAAM,MAAM,GAAG,MAAM,oBAAS,CAAC,MAAM,CAAC;YACrC,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,KAAK,EAAE,IAAI,CAAC,KAAK;SACjB,EAAE,EAAE,KAAK,EAAE;gBACX,IAAI;aACJ,EAAC,CAAC,CAAC;QACJ,OAAO,MAAM,CAAC;KACd;IAAC,OAAO,GAAQ,EAAE;QAClB,OAAO,GAAG,CAAC;KACX;AACF,CAAC,CAAC;AAEY,eAAU,GAAG,KAAK,EAAE,EAAU,EAAE,EAAE;IAC/C,IAAI;QACH,MAAM,UAAU,GAAG,MAAM,oBAAS,CAAC,MAAM,CAAC;YACzC,KAAK,EAAE,KAAK;SACZ,EACD,EAAE,KAAK,EAAE;gBACR,EAAE;aACF,EAAC,CAAC,CAAC;QACJ,OAAO,UAAU,CAAC;KAElB;IAAC,OAAO,GAAQ,EAAE;QAClB,OAAO,GAAG,CAAC;KACX;AACF,CAAC,CAAC","sourcesContent":["import { UserType, UserTypeUpdate } from '../../types/types';\nimport userModel from '../../database/models/user.model';\nimport selectOneUser from '../../database/models/userRawQuerie.model';\n\nexport default class User {\n\n\tpublic static findAll= async (): Promise<UserType[] | null> => {\n\t\ttry {\n\t\t\tconst user = await userModel.findAll({\n\t\t\t\tattributes: { exclude: ['senha'] }\n\t\t\t});\t\t\n\t\t\treturn user;\n\t\t} catch (err: any) {\n\t\t\treturn err;\n\t\t}\n\t};\n\t\n\tpublic static findByName = async (nome: string): Promise<UserType | object[]> => {\n\t\ttry {\n\t\t\tconst user = await selectOneUser(nome);\n\t\t\treturn user;\n\t\t} catch (err: any) {\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tpublic static findByEmail = async (email: string): Promise<UserType | null> => {\n\t\ttry {\n\t\t\tconst user = await userModel.findOne({where: { email }});\n\t\t\treturn user;\n\t\t} catch (err: any) {\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tpublic static create = async (user: UserType): Promise<UserType | null> => {\n\t\ttry {\t\t\t\n\t\t\tconst create: UserType | null = await userModel.create({\n\t\t\t\tnome: user.nome,\n\t\t\t\temail: user.email,\n\t\t\t\tsenha: user.senha,\n\t\t\t\tavatar: user.avatar,\n\t\t\t\tdataDeNascimento: user.dataDeNascimento\n\t\t\t});\t\t\t\n\t\t\treturn create;\n\t\t} catch (err: any) {\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tpublic static update = async (nome: string, user: UserTypeUpdate)/* : Promise<UserType | null> */ => {\n\t\ttry {\t\t\t\n\t\t\tconst update = await userModel.update({\n\t\t\t\tnome: user.nome,\n\t\t\t\temail: user.email,\n\t\t\t\tsenha: user.senha,\n\t\t\t\tavatar: user.avatar,\n\t\t\t\tdataDeNascimento: user.dataDeNascimento,\n\t\t\t\tativo: user.ativo\n\t\t\t}, { where: {\n\t\t\t\tnome\n\t\t\t}});\t\t\t\n\t\t\treturn update;\n\t\t} catch (err: any) {\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tpublic static deleteById = async (id: number) => {\n\t\ttry {\n\t\t\tconst deactivate = await userModel.update({\n\t\t\t\tativo: false\n\t\t\t}, \n\t\t\t{ where: {\n\t\t\t\tid\n\t\t\t}}); \n\t\t\treturn deactivate;\n\n\t\t} catch (err: any) {\n\t\t\treturn err;\n\t\t}\n\t};\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ad58802bc6aac0e40d19d90e7fd17e40350bc14e"},"/home/gabriel/repositorios/fullstack-app-test/app/backend/src/database/models/userRawQuerie.model.ts":{"path":"/home/gabriel/repositorios/fullstack-app-test/app/backend/src/database/models/userRawQuerie.model.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":20},"end":{"line":6,"column":40}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":51}},"5":{"start":{"line":8,"column":21},"end":{"line":20,"column":1}},"6":{"start":{"line":9,"column":4},"end":{"line":19,"column":5}},"7":{"start":{"line":10,"column":21},"end":{"line":14,"column":10}},"8":{"start":{"line":15,"column":8},"end":{"line":15,"column":20}},"9":{"start":{"line":18,"column":8},"end":{"line":18,"column":19}},"10":{"start":{"line":21,"column":0},"end":{"line":21,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":21},"end":{"line":8,"column":22}},"loc":{"start":{"line":8,"column":37},"end":{"line":20,"column":1}},"line":8}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1},"f":{"0":1,"1":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/gabriel/repositorios/fullstack-app-test/app/backend/src/database/models/userRawQuerie.model.ts","sources":["/home/gabriel/repositorios/fullstack-app-test/app/backend/src/database/models/userRawQuerie.model.ts"],"names":[],"mappings":";;;;;AAAA,yCAAuC;AAEvC,oDAAyB;AAEzB,MAAM,YAAY,GAAG,KAAK,EAAE,IAAY,EAAgC,EAAE;IACzE,IAAG;QACF,MAAM,IAAI,GAAG,MAAM,eAAE,CAAC,KAAK,CAAW;iCACP,EAAE;YAChC,YAAY,EAAE,EAAE,IAAI,EAAE;YACtB,IAAI,EAAE,sBAAU,CAAC,MAAM;SACvB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;KACZ;IAAC,OAAO,GAAQ,EAAE;QAClB,OAAO,GAAG,CAAC;KACX;AACF,CAAC,CAAC;AAEF,kBAAe,YAAY,CAAC","sourcesContent":["import { QueryTypes } from 'sequelize';\nimport { UserType } from '../../types/types';\nimport db from './index';\n\nconst selectByName = async (nome: string): Promise<UserType | object[]> => {\n\ttry{\n\t\tconst user = await db.query<UserType>(`SELECT id, nome, email, avatar, data_de_nascimento, ativo\n\t\t FROM Users WHERE nome = :nome`, {\n\t\t\treplacements: { nome },\n\t\t\ttype: QueryTypes.SELECT\n\t\t});\n\t\treturn user;\n\t} catch (err: any) {\n\t\treturn err;\n\t}\n};\n\nexport default selectByName;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"eaa360a54c34a51d3916ec875fc70ccfba645249"}}